---
version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@4.1.2
  # aws-cloudformation: orbss/aws-cloudformation@0.1.6
  # ansible-playbook: orbss/ansible-playbook@0.0.5

jobs:
  provisioning-stack:
    executor: aws-cli/default
    steps:
      - checkout
      - run:
          name: Set up AWS credentials
          command: |
            echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $BASH_ENV
            echo "export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: deploy cloudformation
          command: |
            set -x
            aws cloudformation deploy --template-file cloudformation/network_layer.yml --stack-name samplestack


#           name: "template validate"
#           command: |
#             aws cloudformation validate-template --template-body file://cloudformation/network_layer.yml;
#             aws cloudformation validate-template --template-body file://cloudformation/security_layer.yml;
#             aws cloudformation validate-template --template-body file://cloudformation/application_layer.yml;
#       - aws-cloudformation/deploy:
#           template-file-path: cloudformation/network_layer.yml
#           stack-name: network_layer
#           extra-arguments:  --no-fail-on-empty-changeset
#       - aws-cloudformation/deploy:
#           template-file-path: cloudformation/security_layer.yml
#           stack-name: security_layer.yml
#           extra-arguments:  --no-fail-on-empty-changeset
#       - aws-cloudformation/deploy:
#           template-file-path: cloudformation/application_layer.yml
#           stack-name: application_layer.yml
#           extra-arguments:  --no-fail-on-empty-changeset

workflows:
  version:  2
  provisioning-deploy:
    jobs:
      - provisioning-stack