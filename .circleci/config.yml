---
version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@4.1.2
  ansible-playbook: orbss/ansible-playbook@0.0.5

jobs:
  provisioning-stack:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Set up AWS credentials
          command: |
            echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $BASH_ENV
            echo "export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: deploy cloudformation
          command: |
            set -x
            aws cloudformation deploy --template-file cloudformation/network_layer.yml --stack-name networklayer
            aws cloudformation deploy --template-file cloudformation/security_layer.yml --stack-name securitylayer --capabilities CAPABILITY_NAMED_IAM
            aws cloudformation deploy --template-file cloudformation/application_layer.yml --stack-name applicationlayer --capabilities CAPABILITY_IAM
      
  execute-ansible-playbook:
    executor: ansible-playbook/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:tEZSyjFZuMgjp5IzskmSJez4J9MIkBs6wHDS2VHU344"
      - ansible-playbook/install:
          version: 2.10.7
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: '-i ansible/inventory' 
          
  
workflows:
  version: 2
  provisioning-deploy:
    jobs:
      - provisioning-stack
      - execute-ansible-playbook:
          requires:
            - provisioning-stack
